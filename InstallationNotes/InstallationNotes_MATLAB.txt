######################################################
# Make MATLAB actually be able to activate on Fedora #
######################################################

# Uninstall biosdevname
yum remove biosdevname

# Add "biosdevname=0 net.ifnames=0" to the /etc/default/grub file under the Linux command line options to disable the biosdevname module on boot
# Rebuild the Grub splash screen
grub2-mkconfig -o /boot/grub2/grub.cfg

# Create the file /etc/udev/rules.d/70-persistent-net.rules with the following information (replace the MAC with the MAC of the computer

# Rule to rename the ethernet device to eth0, required for MATLAB to activate properly
#SUBSYSTEM=="net", ACTION="add", DRIVERS="?*", ATTR{address}="70:71:BC:AC:27:25", ATTR{dev_id}=="0x0", ATTR{type}=="1", KERNEL=="eth*", NAME="eth0"

# Rename the file "ifcfg-*" inside /etc/sysconfig/network-scripts to be "ifcfg-eth0"
# Change the field for "name" in that file to contain "eth0" instead of the default name

######################################################
# Make the serial port work on Fedora/Redhat systems #
######################################################

# Change the rxtx libraries the software uses because the version it comes with
# is incompatible with Fedora 18 due to changes in the directory permissions.
# The fix for this is to link in the system-wide rxtx libraries for use instead
# of the libraries it came with.

# cd /opt/matlab/version

# In Ubuntu, install these packages
apt-get install librxtx-java uucp

# In Fedora, install these packages
dnf install rxtx uucp

# Add the user to the uucp group to access the port (and lock files in Ubuntu)
usermod -aG uucp $(whoami)

# For Fedora, add the user to the lock group to allow access to the lock files
usermod -aG lock $(whoami)

# Get rid of the rxtx libraries which ship with MATLAB
mv java/jarext/RXTXcomm.jar java/jarext/RXTXcomm.jar.original
mv bin/glnxa64/librxtxSerial.so bin/glnxa64/librxtxSerial.so.old

# For Fedora, link in the system-wide rxtx libraries
ln -s /lib64/rxtx/librxtxSerial.so bin/glnxa64/librxtxSerial.so
ln -s /usr/share/java/RXTXcomm.jar java/jarext/RXTXcomm.jar

# For Ubuntu, link in the system-wide rxtx libraries
ln -s /usr/lib/jni/librxtxSerial.so bin/glnxa64/librxtxSerial.so
ln -s /usr/share/java/RXTXcomm.jar java/jarext/RXTXcomm.jar


#################################################
# Make MATLAB use the system glibc library      #
#################################################
mv sys/os/glnxa64/libstdc++.so.6 sys/os/glnxa64/libstdc++.so.6.old
mv sys/os/glnxa64/libgcc_s.so.1 sys/os/glnxa64/libgcc_s.so.1.old
mv sys/os/glnxa64/libgfortran.so.3 sys/os/glnxa64/libgfortran.so.3.old
mv sys/os/glnxa64/libquadmath.so.0 sys/os/glnxa64/libquadmath.so.0.old


#################################################
# Make the live script capability work properly #
#################################################
# Based on: https://wiki.archlinux.org/index.php/matlab#Addon_manager_not_working

# Relink the libgcrypt library
ln -fs /usr/lib64/libgcrypt.so.20 sys/jxbrowser-chromium/glnxa64/chromium/libgcrypt.so.11

# Relink several other libraries 
ln -fs /usr/lib64/libgio-2.0.so.0 cefclient/sys/os/glnxa64/libgio-2.0.so;
ln -fs /usr/lib64/libgio-2.0.so.0 cefclient/sys/os/glnxa64/libgio-2.0.so.0;

ln -fs /usr/lib64/libglib-2.0.so.0 cefclient/sys/os/glnxa64/libglib-2.0.so;
ln -fs /usr/lib64/libglib-2.0.so.0 cefclient/sys/os/glnxa64/libglib-2.0.so.0;

ln -fs /usr/lib64/libgmodule-2.0.so.0 cefclient/sys/os/glnxa64/libgmodule-2.0.so;
ln -fs /usr/lib64/libgmodule-2.0.so.0 cefclient/sys/os/glnxa64/libgmodule-2.0.so.0;

ln -fs /usr/lib64/libgobject-2.0.so.0 cefclient/sys/os/glnxa64/libgobject-2.0.so;
ln -fs /usr/lib64/libgobject-2.0.so.0 cefclient/sys/os/glnxa64/libgobject-2.0.so.0;

ln -fs /usr/lib64/libgthread-2.0.so.0 cefclient/sys/os/glnxa64/libgthread-2.0.so;
ln -fs /usr/lib64/libgthread-2.0.so.0 cefclient/sys/os/glnxa64/libgthread-2.0.so.0;

# Relink the libfreetype library as well
ln -fs /usr/lib64/libfreetype.so.6 bin/glnxa64/libfreetype.so.6
