#!/bin/bash
# This script will configure the path for a specific Xilinx version.
# It first searches the existing path to find all references to Xilinx programs, and removes them.
# Then it re-adds the appropriate path for the desired version.
#
# This script requires the environment variable XILBASE be set to the path that contains the base path
# e.g. /opt/Xilinx


# Get some helper functions
source helpers.sh

# Setup printing
disp_setup $2

# Start the script
for dummy in once;
do


###############################################################
# Make sure the Xilinx base directory is specified
###############################################################
if [ -z "$XILBASE" ];
then
	disp_err "The variable XILBASE must be set to the base Xilinx installation path."
	break
fi


###############################################################
# Make sure the Xilinx base directory exists
###############################################################
if [ ! -d "$XILBASE" ];
then
    disp_err "The directory '$XILBASE' does not exist."
    break
fi

# Find out what versions of MATLAB are installed
EXIST_INSTALL=$(dir "$XILBASE/Vivado")


###############################################################
# Display the help if requested
###############################################################
if [ $# == 0 ];
then
	disp "$(basename $0) version print\n"
	disp "The version should be provided as the full string (e.g. 2017.1)\n"
	disp "Print is an optional argument for if anything should be printed. When 0, it will disable printing "
	disp "this can be used if this script is called from the bashrc scripts (which may have problems when "
	disp "printing occurs inside of them.\n"
	disp "\n"
  print_cur_ver "${EXIST_INSTALL[@]}"
  print_all_vers "MATLAB" "${EXIST_INSTALL[@]}"

  break
fi



###############################################################
# Make sure that the user supplied a version
###############################################################
if [ -z $1 ];
then
  disp_err "Must supply the desired version of Xilinx tools."
  break
else
  # The input is the Xilinx version
  XILVER=$1
fi


###############################################################
# Make sure that the script has been sourced
###############################################################
(return 0 2>/dev/null) && SOURCED=1 || SOURCED=0
if [ $SOURCED = 0 ]; then
    disp_err "This script must be sourced. Use \"source $(basename "$0")\" instead."
    break
fi


###################################################################
# Print out version information
###################################################################
print_all_vers "Xilinx" "${EXIST_INSTALL[@]}"
print_cur_ver "${EXIST_INSTALL[@]}"


###################################################################
# Clean the path
###################################################################
path_remove_basedir "$XILBASE"

if [ $XILVER == "none" ];
then
	disp "Removing Xilinx tools from path\n"
	break;
fi


###################################################################
# Find if the requested version is installed
###################################################################
MATCH=0
for d in $EXIST_INSTALL; do
	# See if the desired version is installed
	if [ "$d" == $XILVER ];
	then
		MATCH=1
	fi
done


############################################################
# Make sure that the version is installed
############################################################
if [ $MATCH == 0 ];
then
  disp_err "The requested version $XILVER is not installed."
  break
fi


############################################################
# Do the configuration
############################################################
disp "Configuring for Xilinx $XILVER\n"

# Call the Xilinx settings script to configure the environment
source $XILBASE/Vivado/$XILVER/settings64.sh

############################################################
# Exit the script
############################################################
break
done

if [[ -z $ECODE ]]
then
  ECODE=0
fi
return $ECODE 2> /dev/null || exit $ECODE
