#!/bin/bash
# This script will configure the path for a specific MATLAB version.
# It first searches the existing path to find all references to MATLAB programs, and removes them.
# Then it re-adds the appropriate path for the desired version.
#
# This script requires the environment variable MATBASE be set to the path that contains the base path
# e.g. /usr/local/MATLAB or /opt/MATLAB


###############################################################
# Some helper functions
###############################################################

# A path removal function from: https://unix.stackexchange.com/questions/108873/removing-a-directory-from-path
function path_remove {
  # Delete path by parts so we can never accidentally remove sub paths
  PATH=${PATH//":$1:"/":"} # delete any instances in the middle
  PATH=${PATH/#"$1:"/} # delete any instance at the beginning
  PATH=${PATH/%":$1"/} # delete any instance in the at the end
}

# A function to only print stuff out when requested
function disp {
	if [ $PRINT == 1 ];
	then
		printf "$1"
	fi
}


###############################################################
# Make sure the MATLAB base directory is specified
###############################################################
# The base directory containing the MATLAB installation
if [ -z "$MATBASE" ];
then
	printf "Error: The variable MATBASE must be set to the base MATLAB installation path.\n"
	return 1 2> /dev/null || exit 1
fi


###############################################################
# Make sure the MATLAB base directory exists
###############################################################
if [ ! -d "$MATBASE" ];
then
	printf "Error: The directory '$MATBASE' does not exist\n"
	return 1 2> /dev/null || exit 1
fi


###############################################################
# Display the help if requested
###############################################################
if [ $# == 0 ];
then
	printf "$(basename $0) version print\n"
	printf "The version should be provided as the last 3 characters (e.g. 2017b is 17b)\n"
	printf "Print is an optional argument for if anything should be printed. When 0, it will disable printing\n"
	printf "this can be used if this script is called from the bashrc scripts (which may have problems when\n"
	printf "printing occurs inside of them.\n"
	printf "\n"
	
	# Find out what versions of MATLAB are installed
	EXIST_INSTALL=$(dir $MATBASE)
	printf "Detected MATLAB versions:"

	for d in $EXIST_INSTALL; do
		printf " $d"
	done
	
	printf "\n"

	return 0 2> /dev/null || exit 0
fi



###############################################################
# Parse the arguments
###############################################################

# Check to see if printing is desired
if [ -z $2 ];
then
	PRINT=1
else
	PRINT=0
fi

# Make sure that the user supplied a version
if [ -z $1 ];
then
  disp "Error: Must supply the desired version of MATLAB. Only provide the last 3 characters (e.g. 16b).\n"
  return 1 2> /dev/null || exit 1
else
  # The input is the MATLAB version (last 3 characters)
  MATVER="R20$1"
fi


###############################################################
# Make sure that the script has been sourced
###############################################################
if [ -z "$PS1" ]; then
    disp "Error: This script must be sourced. Use \"source $(basename "$0")\" instead.\n"
    return 1 2> /dev/null || exit 1
fi


###################################################################
# Clean the path
###################################################################

# Get all existing MATLAB installations to remove them from the path
EXIST_INSTALL=$(dir $MATBASE)
disp "Detected MATLAB versions:"

MATCH=0
for d in $EXIST_INSTALL; do
	disp " $d"
	
  # See if the desired version is installed
  if [ "$d" == $MATVER ];
  then
    MATCH=1
  fi

  # Actually remove the path variables
  path_remove "$MATBASE/$d/bin"
done

disp "\n"



############################################################
# Make sure that the version is installed
############################################################
if [ $MATCH == 0 ];
then
  disp "Error: The requested version $MATVER is not installed.\n"
  return 1 2> /dev/null || exit 1
fi



############################################################
# Do the configuration
############################################################
disp "\tConfiguring for MATLAB $MATVER\n"

# Configure the path
export PATH="$PATH:$MATBASE/$MATVER/bin"
export MATLAB_JAVA="$MATBASE/$MATVER/sys/java/jre/glnxa64/jre"

#Configure a variable for other use
export MYMATLAB="$MATBASE/$MATVER"
