#!/bin/bash
# This script will configure the path for a specific MATLAB version.
# It first searches the existing path to find all references to MATLAB programs, and removes them.
# Then it re-adds the appropriate path for the desired version.
#
# This script requires the environment variable MATBASE be set to the path that contains the base path
# e.g. /usr/local/MATLAB or /opt/MATLAB


# Get some helper functions
source helpers.sh

# Setup printing
disp_setup $2

# Start the script
for dummy in once;
do

###############################################################
# Make sure the MATLAB base directory is specified
###############################################################
# The base directory containing the MATLAB installation
if [ -z "$MATBASE" ];
then
	disp_err "The variable MATBASE must be set to the base MATLAB installation path."
  break
fi


###############################################################
# Make sure the MATLAB base directory exists and find the versions
# in it
###############################################################
if [ ! -d "$MATBASE" ];
then
	disp_err "The directory '$MATBASE' does not exist."
  break
fi

# Find out what versions of MATLAB are installed
EXIST_INSTALL=$(dir $MATBASE)


###############################################################
# Display the help if requested
###############################################################
if [ $# == 0 ];
then
	disp "$(basename $0) version print\n"
	disp "The version should be provided as the last 3 characters (e.g. 2017b is 17b)\n"
	disp "Print is an optional argument for if anything should be printed. When 0, it will disable printing "
	disp "this can be used if this script is called from the bashrc scripts (which may have problems when "
	disp "printing occurs inside of them.\n"
	disp "\n"
  print_cur_ver "${EXIST_INSTALL[@]}"
	print_all_vers "MATLAB" "${EXIST_INSTALL[@]}"

	break
fi


###############################################################
# Make sure that the user supplied a version
###############################################################
if [ -z $1 ];
then
  disp_err "Must supply the desired version of MATLAB. Only provide the last 3 characters (e.g. 16b)."
  break
else
  # The input is the MATLAB version (last 3 characters)
  MATVER="R20$1"
fi


###############################################################
# Make sure that the script has been sourced
###############################################################
(return 0 2>/dev/null) && SOURCED=1 || SOURCED=0
if [ $SOURCED = 0 ]; then
    disp_err "This script must be sourced. Use \"source $(basename "$0")\" instead."
    break
fi


###################################################################
# Print out version information
###################################################################
print_all_vers "MATLAB" "${EXIST_INSTALL[@]}"
print_cur_ver "${EXIST_INSTALL[@]}"


###################################################################
# Clean the path
###################################################################
MATCH=0
for d in $EXIST_INSTALL; do
  # See if the desired version is installed
  if [ "$d" == $MATVER ];
  then
    MATCH=1
  fi

  # Actually remove the path variables
  path_remove "$MATBASE/$d/bin"
done


############################################################
# Make sure that the version is installed
############################################################
if [ $MATCH == 0 ];
then
  disp_err "The requested version $MATVER is not installed."
  break
fi


############################################################
# Do the configuration
############################################################
disp "Configuring for MATLAB $MATVER\n"

# Configure the path
export PATH="$PATH:$MATBASE/$MATVER/bin"
export MATLAB_JAVA="$MATBASE/$MATVER/sys/java/jre/glnxa64/jre"

#Configure a variable for other use
export MYMATLAB="$MATBASE/$MATVER"



# Exit the script
break
done

if [[ -z $ECODE ]]
then
  ECODE=0
fi
return $ECODE 2> /dev/null || exit $ECODE
