[http]
	sslVerify = true
[alias]
    # Display all branches
	b = branch -a

    # Display some nice logs
    last = log --pretty=format:'%Cred%h%Creset %Cgreen(%cr) -%C(yellow)%d%Creset %s %C(bold blue)<%an> (%ar)%Creset' -1
	l    = log --graph --pretty=format:'%Cred%h%Creset %Cgreen(%cr) -%C(yellow)%d%Creset %s %C(bold blue)<%an> (%ar)%Creset' --abbrev-commit
	ld   = log --graph --pretty=format:'%Cred%h%Creset %Cgreen(%cr) -%C(yellow)%d%Creset %s %C(bold blue)<%an> (%ar)%Creset' --abbrev-commit -p
    ls   = log --graph --pretty=format:'%Cred%h%Creset %Cgreen(%cr) -%C(yellow)%d%Creset %s %C(bold blue)<%an> (%ar)%Creset' --abbrev-commit --name-status
    lol  = log --graph --pretty=format:'%Cred%h%Creset %Cgreen(%cr) -%C(yellow)%d%Creset %s %C(bold blue)<%an> (%ar)%Creset' --abbrev-commit --decorate
    lola = log --graph --pretty=format:'%Cred%h%Creset %Cgreen(%cr) -%C(yellow)%d%Creset %s %C(bold blue)<%an> (%ar)%Creset' --abbrev-commit --decorate --all

	# Amend the current commit (either with/without message)
	amend = commit --amend --no-edit
	amend-message = commit --amend

	# Update the current branch against the given remote/branch
	# use git update remote branch
	update = "!git fetch --all && git rebase --strategy=resolve $1 $2 #"
	
	# Format patch/reset all against specified remote/branch
	# use git command remote/branch
	remove   = reset --hard
	patch    = format-patch 

	# Format patch/reset all against current upstream (requires origin)
	patch-u  = format-patch @{u}
	remove-u = reset --hard @{u}

	# Shorten the status commands
	sta  = status
	stai = status --ignored

	# Diff with cached files
	diffc = diff --cached

[color]
	interactive = auto
	ui = true
	pager = true
[color "branch"]
	current = cyan bold
	local = magenta
	remote = green
[color "status"]
	header = normal
	added = green bold
	changed = red bold
	untracked = cyan
[color "diff"]
	meta = yellow
	frag = magenta
	old = red bold
	new = cyan bold
	commit = blue
	whitespace = red
